{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["getNewDate","Date","toUTCString","slice","Clock","state","today","timerId","this","window","setInterval","setState","prevProps","prevState","props","clockName","console","debug","info","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,EAAa,kBAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAEjDC,EAAb,4MACEC,MAAyB,CACvBC,MAAON,KAFX,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAON,QACtB,OAVP,gCAaE,SAAmBY,EAAkBC,GAC/BL,KAAKM,MAAMC,YAAcH,EAAUG,WACrCN,OAAOO,QAAQC,MAAf,uBAAqCL,EAAUG,UAA/C,eAA+DP,KAAKM,MAAMC,UAA1E,MAGEP,KAAKH,MAAMC,QAAUO,EAAUP,OACjCG,OAAOO,QAAQE,KAAKV,KAAKH,MAAMC,SAnBrC,kCAuBE,WACEG,OAAOU,cAAcX,KAAKD,WAxB9B,oBA2BE,WACE,IAAQQ,EAAcP,KAAKM,MAAnBC,UACAT,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGd,WAxCX,GAA2Be,aCH3B,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAGX,IAAMG,EAAb,4MACErB,MAAe,CACbsB,UAAU,EACVZ,UAAW,WAHf,EAMER,QAAU,EANZ,EAyBEqB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKnB,SAAS,CAAEgB,UAAU,KA3B9B,EA8BEI,gBAAkB,WAChB,EAAKpB,SAAS,CAAEgB,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAezB,KAAKoB,kBAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,iBAExCvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWO,QAC1B,QAdP,kCAiBE,WACEU,SAASE,oBAAoB,cAAe1B,KAAKoB,kBACjDI,SAASE,oBAAoB,QAAS1B,KAAKuB,iBACvCvB,KAAKD,SACPE,OAAOU,cAAcX,KAAKD,WArBhC,oBAkCE,WACE,MAAgCC,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAzCvC,GAAyBM,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.2652b496.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  today: string;\n}\n\nconst getNewDate = () => new Date().toUTCString().slice(-12, -4);\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: getNewDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: getNewDate() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.clockName !== prevProps.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}}`);\n    }\n\n    if (this.state.today !== prevState.today) {\n      window.console.info(this.state.today);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './component';\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}